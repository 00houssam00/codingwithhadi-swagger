openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /products/{productId}:
    get:
      tags:
        - product-controller
      operationId: getProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    put:
      tags:
        - product-controller
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - product-controller
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /cart/products/{productId}:
    put:
      tags:
        - cart-controller
      operationId: updateCartItem
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCartRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CartItemDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    post:
      tags:
        - cart-controller
      operationId: addCartItem
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CartItemDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - cart-controller
      operationId: removeCartItem
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /wishlist/products/{productId}:
    post:
      tags:
        - wishlist-controller
      operationId: addWishlistItem
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WishlistItemDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - wishlist-controller
      operationId: removeWishlistItem
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /users/addresses:
    get:
      tags:
        - user-controller
      operationId: getUserAddresses
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAddressDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    post:
      tags:
        - user-controller
      operationId: createUserAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserAddressRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserAddressDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /products:
    get:
      tags:
        - product-controller
      operationId: getProducts
      parameters:
        - name: q
          in: query
          required: false
          schema:
            type: string
        - name: onSale
          in: query
          required: false
          schema:
            type: boolean
        - name: categoryName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    post:
      tags:
        - product-controller
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /orders:
    get:
      tags:
        - order-controller
      operationId: getOrders
      parameters:
        - name: userId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    post:
      tags:
        - order-controller
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /categories:
    get:
      tags:
        - category-controller
      operationId: getCategories
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    post:
      tags:
        - category-controller
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CategoryDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /authentication/register:
    post:
      tags:
        - authentication-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OAuth2AccessTokenResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /authentication/authenticate:
    post:
      tags:
        - authentication-controller
      operationId: authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OAuth2AccessTokenResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
  /wishlist/products:
    get:
      tags:
        - wishlist-controller
      operationId: getWishlist
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WishlistItemDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - wishlist-controller
      operationId: clearWishlist
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /users:
    get:
      tags:
        - user-controller
      operationId: getUser
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /cart/products:
    get:
      tags:
        - cart-controller
      operationId: getCart
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CartItemDto'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
    delete:
      tags:
        - cart-controller
      operationId: clearCart
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /users/addresses/{userAddressId}:
    delete:
      tags:
        - user-controller
      operationId: deleteUserAddress
      parameters:
        - name: userAddressId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
  /categories/{categoryName}:
    delete:
      tags:
        - category-controller
      operationId: deleteCategory
      parameters:
        - name: categoryName
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessageDto'
      security:
        - Bearer Authentication: []
components:
  schemas:
    ErrorMessageDto:
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: string
          format: date-time
    ProductRequest:
      required:
        - categoryName
        - price
        - title
      type: object
      properties:
        title:
          type: string
        imageUrl:
          type: string
        categoryName:
          type: string
        price:
          type: number
        salePrice:
          type: number
    ProductDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        imageUrl:
          type: string
        categoryName:
          type: string
        price:
          type: number
        salePrice:
          type: number
    UpdateCartRequest:
      required:
        - quantity
      type: object
      properties:
        quantity:
          type: integer
          format: int32
    CartItemDto:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductDto'
        quantity:
          type: integer
          format: int32
    WishlistItemDto:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductDto'
    CreateUserAddressRequest:
      required:
        - shippingAddress
      type: object
      properties:
        shippingAddress:
          type: string
    UserAddressDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shippingAddress:
          type: string
    CreateOrderRequest:
      required:
        - productId
        - quantity
        - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    OrderDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/UserDto'
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/OrderProductDto'
        orderDate:
          type: string
          format: date-time
    OrderProductDto:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/ProductDto'
        quantity:
          type: integer
          format: int32
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        name:
          type: string
        userAddresses:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserAddressDto'
    CreateCategoryRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
    CategoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    RegisterUserRequest:
      required:
        - name
        - password
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        password:
          type: string
    OAuth2AccessToken:
      type: object
      properties:
        tokenValue:
          type: string
        issuedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
        tokenType:
          $ref: '#/components/schemas/TokenType'
        scopes:
          uniqueItems: true
          type: array
          items:
            type: string
    OAuth2AccessTokenResponse:
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/OAuth2AccessToken'
        refreshToken:
          $ref: '#/components/schemas/OAuth2RefreshToken'
        additionalParameters:
          type: object
          additionalProperties:
            type: object
    OAuth2RefreshToken:
      type: object
      properties:
        tokenValue:
          type: string
        issuedAt:
          type: string
          format: date-time
        expiresAt:
          type: string
          format: date-time
    TokenType:
      type: object
      properties:
        value:
          type: string
    AuthenticateUserRequest:
      required:
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
  securitySchemes:
    Bearer Authentication:
      type: http
      scheme: bearer
      bearerFormat: JWT
